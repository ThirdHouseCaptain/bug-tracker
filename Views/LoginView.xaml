<Window x:Class="bug_tracker.Views.LoginView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:bug_tracker.Views"
        mc:Ignorable="d"
        ResizeMode="CanMinimize"
        Title="BugSharp - Login" Height="450" Width="450" 
        WindowStartupLocation="CenterScreen"
        MouseDown="Window_MouseDown"
        AllowsTransparency="True"
        Background="Transparent"  WindowStyle="None">
    <Border CornerRadius="10" Background="Azure" BorderBrush="Gray" BorderThickness="0.3">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="150"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="20"/>
            </Grid.RowDefinitions>

            <Image Grid.Row="1" Grid.Column="1"
               Grid.ColumnSpan="2" >
                <Image.Effect>
                    <DropShadowEffect BlurRadius="5"
                                      ShadowDepth="1"
                                      Color="#FFAEAEAE" />
                </Image.Effect>
                <Image.Source>
                    <BitmapImage UriSource="/images/logo.png"/>
                </Image.Source>
            </Image>
            <TextBlock Grid.Row="2" Grid.Column="1" Text="Admin Login"
                   x:Name="adminUserLoginText" FontSize="25"
                   VerticalAlignment="Center"
                   FontWeight="DemiBold"
                   Grid.ColumnSpan="2"
                   FontFamily="Montserrat-Black"
                   HorizontalAlignment="Center"/>
            <TextBlock Grid.Row="3" Grid.Column="1" Text="Username:"
                   VerticalAlignment="Center"
                   
                   HorizontalAlignment="Center"
                   FontSize="20"
                   FontFamily="Montserrat-Black"/>

            <TextBox Grid.Row="3" Grid.Column="2" 
                 FontSize="25"
                 Height="35"
                 VerticalAlignment="Center"
                 Margin="10, 5, 20, 5"
                 Background="#FFF6F6F6"
                 Foreground="DarkGray"
                 TextAlignment="Center"
                 x:Name="Test"
                 Style="{DynamicResource RoundedCornerTextboxStyle}"/>

            <TextBlock Grid.Row="4" Grid.Column="1" Text="Password:"
                   VerticalAlignment="Center"
                   
                   HorizontalAlignment="Center"
                   FontSize="20"
                   FontFamily="Montserrat-Black"/>

            <TextBox Grid.Row="4" Grid.Column="2"
                 FontSize="25"
                 Height="35"
                 Margin="10, 5, 20, 5"
                 VerticalAlignment="Center"
                 Background="#FFF6F6F6"
                 Foreground="DarkGray"
                 TextAlignment="Center" 
                 Text="{Binding Path=Test, Mode=OneWay}"
                 Style="{DynamicResource RoundedCornerTextboxStyle}"/>

            <Button Grid.Column="1" Grid.Row="5" Margin="120, 5, 120, 5"
                Content="Login" FontWeight="Bold"
                Grid.ColumnSpan="2"
                FontFamily="Arial" FontSize="20"
                Foreground="white" Background="#9cc410" 
                Style="{DynamicResource RoundedButtonStyle}">
            </Button>

                <Button x:Name="closeBtn"  Background="Transparent"
                FontWeight="Bold"
                Margin="250,3,3,140"
                Height="22"
                Width="22"
                Click="closeBtn_Click"
                Style="{DynamicResource RoundedButtonStyle}" 
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Grid.Column="2" Grid.RowSpan="2" Grid.ColumnSpan="2">
                <Image
                   Height="15" Width="15"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   RenderOptions.BitmapScalingMode="HighQuality">
                    <Image.Source>
                        <BitmapImage UriSource="/images/close4.png"/>
                    </Image.Source>
                </Image>
            </Button>

            <Button x:Name="minimizeBtn"  Background="Transparent"
                FontWeight="Bold"
                Margin="232,6,6,142"
                Height="22"
                Width="22"
                Click="minimizeBtn_Click"
                Style="{DynamicResource RoundedButtonStyle}" 
                Grid.Column="2" Grid.RowSpan="2">
                <Image
                   Height="15" Width="15"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   RenderOptions.BitmapScalingMode="HighQuality">
                    <Image.Source>
                        <BitmapImage UriSource="/images/minimize.png"/>
                    </Image.Source>
                </Image>
            </Button>
        </Grid>
    </Border>
    
    <Window.Resources>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="RoundedCornerTextboxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="30" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#419a1c"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1c3f0c"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

</Window>
